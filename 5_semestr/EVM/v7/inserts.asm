LXI H, 0900 ;ячейка с количеством элементов. Далее идут элементы.
MOV C, M
MOV E, M ;записываем в регистры количество элементов

begin:
DCR E
JZ end ;если E равен нулю, завершаем программу, так как перебрали все элементы
MOV D, E ;регистр D всегда стартует с текущего значения E, и увелививается в процессе выполнения итераций

LXI H, 0900
MOV C, M
MOV A, L
ADD D
MOV L, A ;переходим на текущий начальный элемент путём сложения L с D. На первой итерации начальным
;элементом является предпоследний

MOV B, M ;сохраняем текущий элемент в B

perebor: ;метка начала вложенной итерации, отвечающей за сравнение и замену.
INX H ;переходим на следующую ячейку

INR D ;увеличиваем счетчик текущей итерации
MOV A, C
SUB D ;вычитаем из C D, условием возврата в начало сдесь является D > C, означающее, что мы вышли за последний элемент
JM begin

MOV A, B ; вычитаем элемент в памяти из регистра B. Если число положительное, понимаем, что элемент на своём месте, и возвращаемся в начало. Иначе выполняем замену.
CMP M
;HLT

JNC begin
MOV A, M ;выполняем перестановку, возвращаем указатель памяти на место, и возвращаемся на указатель итераций
MOV M, B
DCX H
MOV M, A
INX H

JMP perebor
end:
HLT
